{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.jsx","webpack:///./src/components/Layout.jsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","default","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","rebass__WEBPACK_IMPORTED_MODULE_2__","Container","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Helmet","Heading","is","my","Text","218","e","t","m","module","exports","__webpack_require__","StaticQueryContext","react_default","createContext","gatsby_browser_entry_StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","prop_types_default","object","string","isRequired","func","Header_Header","_ref","brand","objectWithoutProperties_default","dist","Box","color","bg","NavLink","gatsby_link_default","to","px","node","className","defaultProps","components_Header","y","T","r","Object","styled_components_browser_es","injectGlobal","Layout_Layout","Provider","staticData","Helmet_default","titleTemplate","site","siteMetadata","title","defaultTitle","lang","language","_2434266343","role","aria-label","x","225","n","i","l","u","c","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","o","229"],"mappings":"gJAsBAA,EAAAC,QAjBqB,kBACnBC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAAC,UAAD,KACEL,EAAAC,EAAAC,cAACI,EAAAC,OAAD,KACEP,EAAAC,EAAAC,cAAA,gCAGFF,EAAAC,EAAAC,cAACE,EAAAI,SAAQC,GAAG,KAAKC,GAAI,GAArB,kBAGAV,EAAAC,EAAAC,cAACE,EAAAO,MAAKF,GAAG,IAAIC,GAAI,GAAjB,0CAAAE,IAAA,SAAAC,EAAAZ,EAAAa,GCfN,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAA,OALAH,EAAEhB,SAAYgB,qHCKzCI,UAAqBC,EAAAnB,EAAMoB,mBAE3BC,EAAc,SAAAC,GAAA,OAClBH,EAAAnB,EAAAC,cAACiB,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDN,EAAAnB,EAAAC,cAAA,uCAMfoB,EAAYQ,WACVJ,KAAMK,EAAA9B,EAAU+B,OAChBL,MAAOI,EAAA9B,EAAUgC,OAAOC,WACxBN,OAAQG,EAAA9B,EAAUkC,KAClBN,SAAUE,EAAA9B,EAAUkC,gECvBhBC,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAUf,EAAbgB,IAAAF,GAAA,iBACbjB,EAAAnB,EAAAC,cAAA,SAAYqB,EACVH,EAAAnB,EAAAC,cAACsC,EAAAC,KAAIC,MAAM,QAAQC,GAAG,WACpBvB,EAAAnB,EAAAC,cAACsC,EAAAnC,UAAD,KACEe,EAAAnB,EAAAC,cAACsC,EAAAI,SAAQnC,GAAIoC,EAAA5C,EAAY6C,GAAG,IAAIC,GAAI,EAAGrC,GAAI,GACxC4B,OAOXF,EAAON,WACLQ,MAAOP,EAAA9B,EAAU+C,KAAKd,WACtBe,UAAWlB,EAAA9B,EAAUgC,QAGvBG,EAAOc,cACLD,UAAW,IAGb,IAAAE,EAAAC,EAAA,SAAAC,IAAA,IAAAxC,EAAAyC,KAAA,wFAAAD,EAAA,kBAAAxC,KClBA0C,OAAAC,EAAAC,aAAAF,CAAAE,KAUA,IAAMC,EAAS,SAAArB,GAAA,IAAGR,EAAHQ,EAAGR,SAAH,OACbT,EAAAnB,EAAAC,cAACsC,EAAAmB,SAAD,KACEvC,EAAAnB,EAAAC,cAACoB,GACCK,MAAA,aAUAC,OAAQ,SAAAgC,GAAA,OACNxC,EAAAnB,EAAAC,cAAC2D,EAAA5D,GACC6D,cAAA,QAAuBF,EAAWG,KAAKC,aAAaC,MACpDC,aAAcN,EAAWG,KAAKC,aAAaC,OAE3C7C,EAAAnB,EAAAC,cAAA,QAAMiE,KAAMP,EAAWG,KAAKC,aAAaI,aAhB/C1C,KAAA2C,IAqBAjD,EAAAnB,EAAAC,cAACiD,GAAOb,MAAOlB,EAAAnB,EAAAC,cAACsC,EAAAhC,SAAQC,GAAG,MAAZ,WAAyBW,EAAAnB,EAAAC,cAAA,QAAMoE,KAAK,MAAMC,aAAW,YAA5B,WAExCnD,EAAAnB,EAAAC,cAAA,YAAO2B,KAIX6B,EAAO5B,WACLD,SAAUE,EAAA9B,EAAU+C,KAAKd,YAG3BpC,EAAAG,EAAAuE,GAAAC,IAAA,SAAA5D,EAAAZ,EAAAa,GAAA,aAAAA,EAAAwC,EAAArD,GAAA,IAAAyE,EAAA5D,EAAA,GAAAwC,EAAAxC,EAAA4D,KAAAC,EAAA7D,EAAA,GAAA8D,EAAA9D,EAAA4D,EAAAC,GAAAE,EAAA/D,EAAA,IAAAgE,EAAAhE,EAAA,GC7CMiE,EAAmB,SAAA1C,GAAkB,IAAf2C,EAAe3C,EAAf2C,SACpBC,EAAgBC,EAAAjF,EAAOkF,wBAAwBH,EAASI,UAC9D,OAAOpF,EAAAC,EAAMC,cAAcmF,EAAApF,GACzB+E,WACAC,mBAIJF,EAAiBjD,WACfkD,SAAUM,EAAArF,EAAUsF,OAClBH,SAAUE,EAAArF,EAAUgC,OAAOC,aAC1BA,YAGLpC,EAAAC,QAAAyF,GAAAC,IAAA,SAAA5E,KAAAI,SAAAS,MAAAqC,MAAAC,cAAAC,MAAA,qBAAAG,SAAA","file":"component---src-pages-404-jsx-6f514aa54d4b8e7223f9.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Container, Heading, Text } from 'rebass';\nimport Layout from '../components/Layout';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <Container>\n      <Helmet>\n        <title>Page not found</title>\n      </Helmet>\n\n      <Heading is=\"h1\" my={3}>\n        Page not found\n      </Heading>\n      <Text is=\"p\" my={3}>\n        The requested page is unavailable.\n      </Text>\n    </Container>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import { Link as GatsbyLink } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Box, Container, NavLink } from 'rebass';\n\nconst Header = ({ brand, ...props }) => (\n  <header {...props}>\n    <Box color=\"white\" bg=\"#078930\">\n      <Container>\n        <NavLink is={GatsbyLink} to=\"/\" px={0} my={3}>\n          {brand}\n        </NavLink>\n      </Container>\n    </Box>\n  </header>\n);\n\nHeader.propTypes = {\n  brand: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  className: '',\n};\n\nexport default Header;\n","import { graphql, StaticQuery } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { Heading, Provider } from 'rebass';\nimport { injectGlobal } from 'styled-components';\nimport Header from './Header';\n\ninjectGlobal`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <Provider>\n    <StaticQuery\n      query={graphql`\n        query LayoutQuery {\n          site {\n            siteMetadata {\n              title\n              language\n            }\n          }\n        }\n      `}\n      render={staticData => (\n        <Helmet\n          titleTemplate={`%s | ${staticData.site.siteMetadata.title}`}\n          defaultTitle={staticData.site.siteMetadata.title}\n        >\n          <html lang={staticData.site.siteMetadata.language} />\n        </Helmet>\n      )}\n    />\n\n    <Header brand={<Heading is=\"h1\">ETinTech<span role=\"img\" aria-label=\"Ethiopia\">ðŸ‡ªðŸ‡¹</span></Heading>} />\n\n    <main>{children}</main>\n  </Provider>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}